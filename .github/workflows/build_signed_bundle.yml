name: Build Signed Bundle

on:
  workflow_call:

jobs:
  build-and-sign-bundle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: >
            ${{ runner.os }}-gradle-
            ${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          # It finds the cache by key "Linux-gradle-"
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Update dependencies
        run: ./gradlew dependencies

      - name: Create Keystore Properties
        run: |
          echo "${{ secrets.KEYSTORE_PROPERTIES }}" > \
          ${{ github.workspace }}/keystore.properties

      - name: Check Keystore Properties file is created
        run: |
          if [ -f ./keystore.properties ]; then
          echo "keystore.properties exists."
          else
          echo "keystore.properties does not exist." >&2
          exit 1
          fi
        continue-on-error: false

      - name: Check Keystore Properties contain required variables
        run: |
          required_vars=\
          ("KEY_PASSWORD" "KEYSTORE_PASSWORD" "KEYSTORE_ALIAS" "KEYSTORE_SECRET")

          missing_vars=()
          
          for var in "${required_vars[@]}"; do
            if ! grep -q "^$var=" ./keystore.properties; then
              missing_vars+=("$var")
            fi
          done  
          
          if [ ${#missing_vars[@]} -ne 0 ]; then
            echo "Missing variables in keystore.properties: ${missing_vars[*]}"
            exit 1
          else
            echo "All required variables are present in keystore.properties."
          fi
        shell: bash

      - name: Decode Release Key
        run: |
          . './keystore.properties' &&
          echo "$KEYSTORE_SECRET" > ./androidApp/release.asc &&
          gpg -d \
          --passphrase "$KEYSTORE_PASSWORD" \
          --batch ./androidApp/release.asc > ./androidApp/release.jks &&
          rm ./androidApp/release.asc
        continue-on-error: false

      - name: Check Release Key is created
        run: |
          if [ -f ./androidApp/release.jks ]; then
          echo "Release key exists."
          else
          echo "Release key does not exist." >&2
          exit 1
          fi
        continue-on-error: false

      - name: Build Signed Bundle (AAB)
        run: ./gradlew clean bundleRelease --stacktrace --no-build-cache

      - name: Remove Release Key
        run: rm ./androidApp/release.jks

      - name: Upload AAB to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bundles
          path: ./androidApp/build/outputs/bundle/*/*-release.aab

      - name: Check Build Status = ${{ job.status }}
        run: echo "Build status report=${{ job.status }}."