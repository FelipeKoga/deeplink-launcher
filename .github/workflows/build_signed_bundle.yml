name: Build Signed Bundle

on:
  workflow_call:

env:
  KEYSTORE_FILE_NAME: ${{ secrets.KEYSTORE_FILE_NAME }}
  KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

jobs:
  build-and-sign-bundle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: >
            ${{ runner.os }}-gradle-
            ${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Update dependencies
        run: ./gradlew dependencies

      - name: Decode Release Key
        run: |
          echo "${{ secrets.KEYSTORE_DECRYPT_SECRET }}" > ./androidApp/${{ secrets.KEYSTORE_FILE_NAME }}.asc &&
          gpg --batch --yes --decrypt --passphrase "${{ secrets.KEYSTORE_DECRYPT_PASSWORD }}" ./androidApp/${{ secrets.KEYSTORE_FILE_NAME }}.asc > ./androidApp/${{ secrets.KEYSTORE_FILE_NAME }}.jks &&
          rm ./androidApp/${{ secrets.KEYSTORE_FILE_NAME }}.asc
        continue-on-error: false

      - name: Check Release Key is created
        run: |
          if [ -f ./androidApp/${{ secrets.KEYSTORE_FILE_NAME }}.jks ]; then
          echo "Release key exists."
          else
          echo "Release key does not exist." >&2
          exit 1
          fi
        continue-on-error: false

      - name: Build Signed Bundle (AAB)
        run: ./gradlew clean bundleRelease --stacktrace --no-build-cache

      - name: Remove Release Key
        run: rm ./androidApp/${{ secrets.KEYSTORE_FILE_NAME }}

      - name: Upload AAB to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bundles
          path: ./androidApp/build/outputs/bundle/*/*-release.aab

      - name: Check Build Status = ${{ job.status }}
        run: echo "Build status report=${{ job.status }}."