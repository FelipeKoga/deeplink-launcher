CREATE TABLE deeplink(
  id TEXT PRIMARY KEY,
  link TEXT NOT NULL UNIQUE,
  name TEXT,
  description TEXT,
  createdAt INTEGER NOT NULL,
  folderId TEXT,
  isFavorite INTEGER DEFAULT 0,
  FOREIGN KEY(folderId) REFERENCES folder(id)
);

CREATE TABLE folder (
    id TEXT PRIMARY KEY,
    name TEXT UNIQUE NOT NULL,
    description TEXT
);


selectDeeplinks:
SELECT d.*, f.*
FROM deeplink d
LEFT JOIN folder f ON d.folderId = f.id
WHERE d.link LIKE ? OR d.name LIKE ? OR d.description LIKE ?
ORDER BY createdAt DESC;

selectAllDeeplinks:
SELECT d.*, f.*
FROM deeplink d
LEFT JOIN folder f ON d.folderId = f.id
ORDER BY createdAt DESC;

deleteDeeplinkById:
DELETE FROM deeplink WHERE id = ?;

upsertDeeplink:
INSERT OR REPLACE INTO deeplink (id, link, name, description, createdAt, isFavorite, folderId)
VALUES (?, ?, ?, ?, ?, ?, ?);

getDeepLinkByLink:
SELECT d.*, f.*
FROM deeplink d
LEFT JOIN folder f ON d.folderId = f.id
WHERE d.link = ?;

getDeepLinkById:
SELECT d.*, f.*
FROM deeplink d
LEFT JOIN folder f ON d.folderId = f.id
WHERE d.id = ?;

selectFoldersWithDeeplinkCount:
SELECT f.*, COUNT(d.id) AS deeplinkCount
FROM folder f
LEFT JOIN deeplink d ON f.id = d.folderId
GROUP BY f.id;

upsertFolder:
INSERT OR REPLACE INTO folder (id, name, description)
VALUES (?, ?, ?);

deleteFolderById:
DELETE FROM folder WHERE id = ?;

getFolderById:
SELECT f.*, COUNT(d.id) AS deeplinkCount
FROM folder f
LEFT JOIN deeplink d ON f.id = d.folderId
WHERE f.id = ?;

getFolderDeepLinks:
SELECT d.*
FROM deeplink d
WHERE d.folderId = ?;